// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\heves\Desktop\New folder\big_hello\big_hello.go

// Package mock_bighello is a generated GoMock package.
package mock_bighello

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRandom is a mock of Random interface.
type MockRandom struct {
	ctrl     *gomock.Controller
	recorder *MockRandomMockRecorder
}

// MockRandomMockRecorder is the mock recorder for MockRandom.
type MockRandomMockRecorder struct {
	mock *MockRandom
}

// NewMockRandom creates a new mock instance.
func NewMockRandom(ctrl *gomock.Controller) *MockRandom {
	mock := &MockRandom{ctrl: ctrl}
	mock.recorder = &MockRandomMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandom) EXPECT() *MockRandomMockRecorder {
	return m.recorder
}

// RandomInt mocks base method.
func (m *MockRandom) RandomInt() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RandomInt")
	ret0, _ := ret[0].(int)
	return ret0
}

// RandomInt indicates an expected call of RandomInt.
func (mr *MockRandomMockRecorder) RandomInt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RandomInt", reflect.TypeOf((*MockRandom)(nil).RandomInt))
}
